/*
 * generated by Xtext 2.34.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Model");
		private final Assignment cProcesosAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cProcesosProcesoParserRuleCall_0 = (RuleCall)cProcesosAssignment.eContents().get(0);
		
		//Model:
		//    procesos+=Proceso*;
		@Override public ParserRule getRule() { return rule; }
		
		//procesos+=Proceso*
		public Assignment getProcesosAssignment() { return cProcesosAssignment; }
		
		//Proceso
		public RuleCall getProcesosProcesoParserRuleCall_0() { return cProcesosProcesoParserRuleCall_0; }
	}
	public class ProcesoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Proceso");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProcesarKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTipoAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTipoTipoProcesoParserRuleCall_1_0 = (RuleCall)cTipoAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cCreacionAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cCreacionCreacionParserRuleCall_3_0_0 = (RuleCall)cCreacionAssignment_3_0.eContents().get(0);
		private final Assignment cConsultaAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cConsultaConsultaParserRuleCall_3_1_0 = (RuleCall)cConsultaAssignment_3_1.eContents().get(0);
		private final Assignment cEliminacionAssignment_3_2 = (Assignment)cAlternatives_3.eContents().get(2);
		private final RuleCall cEliminacionEliminacionParserRuleCall_3_2_0 = (RuleCall)cEliminacionAssignment_3_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cConcluirKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTipoAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTipoTipoProcesoParserRuleCall_6_0 = (RuleCall)cTipoAssignment_6.eContents().get(0);
		
		//Proceso:
		//    'Procesar' tipo=TipoProceso '{'
		//        (creacion=Creacion | consulta=Consulta | eliminacion=Eliminacion)
		//    '}'
		//    'Concluir' tipo=TipoProceso
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//'Procesar' tipo=TipoProceso '{'
		//    (creacion=Creacion | consulta=Consulta | eliminacion=Eliminacion)
		//'}'
		//'Concluir' tipo=TipoProceso
		public Group getGroup() { return cGroup; }
		
		//'Procesar'
		public Keyword getProcesarKeyword_0() { return cProcesarKeyword_0; }
		
		//tipo=TipoProceso
		public Assignment getTipoAssignment_1() { return cTipoAssignment_1; }
		
		//TipoProceso
		public RuleCall getTipoTipoProcesoParserRuleCall_1_0() { return cTipoTipoProcesoParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//(creacion=Creacion | consulta=Consulta | eliminacion=Eliminacion)
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//creacion=Creacion
		public Assignment getCreacionAssignment_3_0() { return cCreacionAssignment_3_0; }
		
		//Creacion
		public RuleCall getCreacionCreacionParserRuleCall_3_0_0() { return cCreacionCreacionParserRuleCall_3_0_0; }
		
		//consulta=Consulta
		public Assignment getConsultaAssignment_3_1() { return cConsultaAssignment_3_1; }
		
		//Consulta
		public RuleCall getConsultaConsultaParserRuleCall_3_1_0() { return cConsultaConsultaParserRuleCall_3_1_0; }
		
		//eliminacion=Eliminacion
		public Assignment getEliminacionAssignment_3_2() { return cEliminacionAssignment_3_2; }
		
		//Eliminacion
		public RuleCall getEliminacionEliminacionParserRuleCall_3_2_0() { return cEliminacionEliminacionParserRuleCall_3_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
		
		//'Concluir'
		public Keyword getConcluirKeyword_5() { return cConcluirKeyword_5; }
		
		//tipo=TipoProceso
		public Assignment getTipoAssignment_6() { return cTipoAssignment_6; }
		
		//TipoProceso
		public RuleCall getTipoTipoProcesoParserRuleCall_6_0() { return cTipoTipoProcesoParserRuleCall_6_0; }
	}
	public class TipoProcesoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.TipoProceso");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMaquinaParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMaterialParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//TipoProceso:
		//    Maquina | Material
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Maquina | Material
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Maquina
		public RuleCall getMaquinaParserRuleCall_0() { return cMaquinaParserRuleCall_0; }
		
		//Material
		public RuleCall getMaterialParserRuleCall_1() { return cMaterialParserRuleCall_1; }
	}
	public class CreacionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Creacion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCrearKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSustantivoAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSustantivoTipoProcesoParserRuleCall_1_0 = (RuleCall)cSustantivoAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Assignment cTipoMaquinaAssignment_2_0_0 = (Assignment)cGroup_2_0.eContents().get(0);
		private final RuleCall cTipoMaquinaTipoMaquinaParserRuleCall_2_0_0_0 = (RuleCall)cTipoMaquinaAssignment_2_0_0.eContents().get(0);
		private final Assignment cPotenciaAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cPotenciaINTTerminalRuleCall_2_0_1_0 = (RuleCall)cPotenciaAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Assignment cTipoMaterialAssignment_2_1_0 = (Assignment)cGroup_2_1.eContents().get(0);
		private final RuleCall cTipoMaterialTipoMaterialParserRuleCall_2_1_0_0 = (RuleCall)cTipoMaterialAssignment_2_1_0.eContents().get(0);
		private final Assignment cGrosorAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cGrosorINTTerminalRuleCall_2_1_1_0 = (RuleCall)cGrosorAssignment_2_1_1.eContents().get(0);
		
		//Creacion:
		//    'Crear' sustantivo=TipoProceso
		//    (tipoMaquina=TipoMaquina potencia=INT | tipoMaterial=TipoMaterial grosor=INT)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Crear' sustantivo=TipoProceso
		//(tipoMaquina=TipoMaquina potencia=INT | tipoMaterial=TipoMaterial grosor=INT)
		public Group getGroup() { return cGroup; }
		
		//'Crear'
		public Keyword getCrearKeyword_0() { return cCrearKeyword_0; }
		
		//sustantivo=TipoProceso
		public Assignment getSustantivoAssignment_1() { return cSustantivoAssignment_1; }
		
		//TipoProceso
		public RuleCall getSustantivoTipoProcesoParserRuleCall_1_0() { return cSustantivoTipoProcesoParserRuleCall_1_0; }
		
		//(tipoMaquina=TipoMaquina potencia=INT | tipoMaterial=TipoMaterial grosor=INT)
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//tipoMaquina=TipoMaquina potencia=INT
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//tipoMaquina=TipoMaquina
		public Assignment getTipoMaquinaAssignment_2_0_0() { return cTipoMaquinaAssignment_2_0_0; }
		
		//TipoMaquina
		public RuleCall getTipoMaquinaTipoMaquinaParserRuleCall_2_0_0_0() { return cTipoMaquinaTipoMaquinaParserRuleCall_2_0_0_0; }
		
		//potencia=INT
		public Assignment getPotenciaAssignment_2_0_1() { return cPotenciaAssignment_2_0_1; }
		
		//INT
		public RuleCall getPotenciaINTTerminalRuleCall_2_0_1_0() { return cPotenciaINTTerminalRuleCall_2_0_1_0; }
		
		//tipoMaterial=TipoMaterial grosor=INT
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//tipoMaterial=TipoMaterial
		public Assignment getTipoMaterialAssignment_2_1_0() { return cTipoMaterialAssignment_2_1_0; }
		
		//TipoMaterial
		public RuleCall getTipoMaterialTipoMaterialParserRuleCall_2_1_0_0() { return cTipoMaterialTipoMaterialParserRuleCall_2_1_0_0; }
		
		//grosor=INT
		public Assignment getGrosorAssignment_2_1_1() { return cGrosorAssignment_2_1_1; }
		
		//INT
		public RuleCall getGrosorINTTerminalRuleCall_2_1_1_0() { return cGrosorINTTerminalRuleCall_2_1_1_0; }
	}
	public class ConsultaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Consulta");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConsultarKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSustantivoAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSustantivoTipoProcesoParserRuleCall_1_0 = (RuleCall)cSustantivoAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Assignment cTipoMaquinaAssignment_2_0_0 = (Assignment)cGroup_2_0.eContents().get(0);
		private final RuleCall cTipoMaquinaTipoMaquinaParserRuleCall_2_0_0_0 = (RuleCall)cTipoMaquinaAssignment_2_0_0.eContents().get(0);
		private final Assignment cPotenciaAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cPotenciaINTTerminalRuleCall_2_0_1_0 = (RuleCall)cPotenciaAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Assignment cTipoMaterialAssignment_2_1_0 = (Assignment)cGroup_2_1.eContents().get(0);
		private final RuleCall cTipoMaterialTipoMaterialParserRuleCall_2_1_0_0 = (RuleCall)cTipoMaterialAssignment_2_1_0.eContents().get(0);
		private final Assignment cGrosorAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cGrosorINTTerminalRuleCall_2_1_1_0 = (RuleCall)cGrosorAssignment_2_1_1.eContents().get(0);
		private final Assignment cVerboAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cVerboVerboParserRuleCall_3_0 = (RuleCall)cVerboAssignment_3.eContents().get(0);
		
		//Consulta:
		//    'Consultar' sustantivo=TipoProceso
		//    (tipoMaquina=TipoMaquina potencia=INT  |tipoMaterial=TipoMaterial grosor=INT)
		//    verbo=Verbo
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Consultar' sustantivo=TipoProceso
		//(tipoMaquina=TipoMaquina potencia=INT  |tipoMaterial=TipoMaterial grosor=INT)
		//verbo=Verbo
		public Group getGroup() { return cGroup; }
		
		//'Consultar'
		public Keyword getConsultarKeyword_0() { return cConsultarKeyword_0; }
		
		//sustantivo=TipoProceso
		public Assignment getSustantivoAssignment_1() { return cSustantivoAssignment_1; }
		
		//TipoProceso
		public RuleCall getSustantivoTipoProcesoParserRuleCall_1_0() { return cSustantivoTipoProcesoParserRuleCall_1_0; }
		
		//(tipoMaquina=TipoMaquina potencia=INT  |tipoMaterial=TipoMaterial grosor=INT)
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//tipoMaquina=TipoMaquina potencia=INT
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//tipoMaquina=TipoMaquina
		public Assignment getTipoMaquinaAssignment_2_0_0() { return cTipoMaquinaAssignment_2_0_0; }
		
		//TipoMaquina
		public RuleCall getTipoMaquinaTipoMaquinaParserRuleCall_2_0_0_0() { return cTipoMaquinaTipoMaquinaParserRuleCall_2_0_0_0; }
		
		//potencia=INT
		public Assignment getPotenciaAssignment_2_0_1() { return cPotenciaAssignment_2_0_1; }
		
		//INT
		public RuleCall getPotenciaINTTerminalRuleCall_2_0_1_0() { return cPotenciaINTTerminalRuleCall_2_0_1_0; }
		
		//tipoMaterial=TipoMaterial grosor=INT
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//tipoMaterial=TipoMaterial
		public Assignment getTipoMaterialAssignment_2_1_0() { return cTipoMaterialAssignment_2_1_0; }
		
		//TipoMaterial
		public RuleCall getTipoMaterialTipoMaterialParserRuleCall_2_1_0_0() { return cTipoMaterialTipoMaterialParserRuleCall_2_1_0_0; }
		
		//grosor=INT
		public Assignment getGrosorAssignment_2_1_1() { return cGrosorAssignment_2_1_1; }
		
		//INT
		public RuleCall getGrosorINTTerminalRuleCall_2_1_1_0() { return cGrosorINTTerminalRuleCall_2_1_1_0; }
		
		//verbo=Verbo
		public Assignment getVerboAssignment_3() { return cVerboAssignment_3; }
		
		//Verbo
		public RuleCall getVerboVerboParserRuleCall_3_0() { return cVerboVerboParserRuleCall_3_0; }
	}
	public class EliminacionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Eliminacion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEliminarKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSustantivoAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSustantivoTipoProcesoParserRuleCall_1_0 = (RuleCall)cSustantivoAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Assignment cTipoMaquinaAssignment_2_0_0 = (Assignment)cGroup_2_0.eContents().get(0);
		private final RuleCall cTipoMaquinaTipoMaquinaParserRuleCall_2_0_0_0 = (RuleCall)cTipoMaquinaAssignment_2_0_0.eContents().get(0);
		private final Assignment cPotenciaAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cPotenciaINTTerminalRuleCall_2_0_1_0 = (RuleCall)cPotenciaAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Assignment cTipoMaterialAssignment_2_1_0 = (Assignment)cGroup_2_1.eContents().get(0);
		private final RuleCall cTipoMaterialTipoMaterialParserRuleCall_2_1_0_0 = (RuleCall)cTipoMaterialAssignment_2_1_0.eContents().get(0);
		private final Assignment cGrosorAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cGrosorINTTerminalRuleCall_2_1_1_0 = (RuleCall)cGrosorAssignment_2_1_1.eContents().get(0);
		
		//Eliminacion:
		//    'Eliminar' sustantivo=TipoProceso
		//    (tipoMaquina=TipoMaquina potencia=INT | tipoMaterial=TipoMaterial grosor=INT)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Eliminar' sustantivo=TipoProceso
		//(tipoMaquina=TipoMaquina potencia=INT | tipoMaterial=TipoMaterial grosor=INT)
		public Group getGroup() { return cGroup; }
		
		//'Eliminar'
		public Keyword getEliminarKeyword_0() { return cEliminarKeyword_0; }
		
		//sustantivo=TipoProceso
		public Assignment getSustantivoAssignment_1() { return cSustantivoAssignment_1; }
		
		//TipoProceso
		public RuleCall getSustantivoTipoProcesoParserRuleCall_1_0() { return cSustantivoTipoProcesoParserRuleCall_1_0; }
		
		//(tipoMaquina=TipoMaquina potencia=INT | tipoMaterial=TipoMaterial grosor=INT)
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//tipoMaquina=TipoMaquina potencia=INT
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//tipoMaquina=TipoMaquina
		public Assignment getTipoMaquinaAssignment_2_0_0() { return cTipoMaquinaAssignment_2_0_0; }
		
		//TipoMaquina
		public RuleCall getTipoMaquinaTipoMaquinaParserRuleCall_2_0_0_0() { return cTipoMaquinaTipoMaquinaParserRuleCall_2_0_0_0; }
		
		//potencia=INT
		public Assignment getPotenciaAssignment_2_0_1() { return cPotenciaAssignment_2_0_1; }
		
		//INT
		public RuleCall getPotenciaINTTerminalRuleCall_2_0_1_0() { return cPotenciaINTTerminalRuleCall_2_0_1_0; }
		
		//tipoMaterial=TipoMaterial grosor=INT
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//tipoMaterial=TipoMaterial
		public Assignment getTipoMaterialAssignment_2_1_0() { return cTipoMaterialAssignment_2_1_0; }
		
		//TipoMaterial
		public RuleCall getTipoMaterialTipoMaterialParserRuleCall_2_1_0_0() { return cTipoMaterialTipoMaterialParserRuleCall_2_1_0_0; }
		
		//grosor=INT
		public Assignment getGrosorAssignment_2_1_1() { return cGrosorAssignment_2_1_1; }
		
		//INT
		public RuleCall getGrosorINTTerminalRuleCall_2_1_1_0() { return cGrosorINTTerminalRuleCall_2_1_1_0; }
	}
	public class MaquinaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Maquina");
		private final Keyword cMaquinaKeyword = (Keyword)rule.eContents().get(1);
		
		//Maquina:
		//    'Maquina'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Maquina'
		public Keyword getMaquinaKeyword() { return cMaquinaKeyword; }
	}
	public class MaterialElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Material");
		private final Keyword cMaterialKeyword = (Keyword)rule.eContents().get(1);
		
		//Material:
		//    'Material'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Material'
		public Keyword getMaterialKeyword() { return cMaterialKeyword; }
	}
	public class TipoMaquinaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.TipoMaquina");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cCO2Keyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFibraKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cVidrioKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		
		//TipoMaquina:
		//    'CO2' | 'Fibra' | 'Vidrio';
		@Override public ParserRule getRule() { return rule; }
		
		//'CO2' | 'Fibra' | 'Vidrio'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'CO2'
		public Keyword getCO2Keyword_0() { return cCO2Keyword_0; }
		
		//'Fibra'
		public Keyword getFibraKeyword_1() { return cFibraKeyword_1; }
		
		//'Vidrio'
		public Keyword getVidrioKeyword_2() { return cVidrioKeyword_2; }
	}
	public class VerboElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Verbo");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cCortarKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cGrabarKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//Verbo:
		//    'cortar' | 'grabar';
		@Override public ParserRule getRule() { return rule; }
		
		//'cortar' | 'grabar'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'cortar'
		public Keyword getCortarKeyword_0() { return cCortarKeyword_0; }
		
		//'grabar'
		public Keyword getGrabarKeyword_1() { return cGrabarKeyword_1; }
	}
	public class TipoMaterialElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.TipoMaterial");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cMaderaKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cMDFKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cMetalKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		
		//TipoMaterial:
		//    'Madera' | 'MDF' | 'Metal'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Madera' | 'MDF' | 'Metal'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'Madera'
		public Keyword getMaderaKeyword_0() { return cMaderaKeyword_0; }
		
		//'MDF'
		public Keyword getMDFKeyword_1() { return cMDFKeyword_1; }
		
		//'Metal'
		public Keyword getMetalKeyword_2() { return cMetalKeyword_2; }
	}
	
	
	private final ModelElements pModel;
	private final ProcesoElements pProceso;
	private final TipoProcesoElements pTipoProceso;
	private final CreacionElements pCreacion;
	private final ConsultaElements pConsulta;
	private final EliminacionElements pEliminacion;
	private final MaquinaElements pMaquina;
	private final MaterialElements pMaterial;
	private final TipoMaquinaElements pTipoMaquina;
	private final VerboElements pVerbo;
	private final TipoMaterialElements pTipoMaterial;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pProceso = new ProcesoElements();
		this.pTipoProceso = new TipoProcesoElements();
		this.pCreacion = new CreacionElements();
		this.pConsulta = new ConsultaElements();
		this.pEliminacion = new EliminacionElements();
		this.pMaquina = new MaquinaElements();
		this.pMaterial = new MaterialElements();
		this.pTipoMaquina = new TipoMaquinaElements();
		this.pVerbo = new VerboElements();
		this.pTipoMaterial = new TipoMaterialElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//    procesos+=Proceso*;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Proceso:
	//    'Procesar' tipo=TipoProceso '{'
	//        (creacion=Creacion | consulta=Consulta | eliminacion=Eliminacion)
	//    '}'
	//    'Concluir' tipo=TipoProceso
	//    ;
	public ProcesoElements getProcesoAccess() {
		return pProceso;
	}
	
	public ParserRule getProcesoRule() {
		return getProcesoAccess().getRule();
	}
	
	//TipoProceso:
	//    Maquina | Material
	//;
	public TipoProcesoElements getTipoProcesoAccess() {
		return pTipoProceso;
	}
	
	public ParserRule getTipoProcesoRule() {
		return getTipoProcesoAccess().getRule();
	}
	
	//Creacion:
	//    'Crear' sustantivo=TipoProceso
	//    (tipoMaquina=TipoMaquina potencia=INT | tipoMaterial=TipoMaterial grosor=INT)
	//;
	public CreacionElements getCreacionAccess() {
		return pCreacion;
	}
	
	public ParserRule getCreacionRule() {
		return getCreacionAccess().getRule();
	}
	
	//Consulta:
	//    'Consultar' sustantivo=TipoProceso
	//    (tipoMaquina=TipoMaquina potencia=INT  |tipoMaterial=TipoMaterial grosor=INT)
	//    verbo=Verbo
	//;
	public ConsultaElements getConsultaAccess() {
		return pConsulta;
	}
	
	public ParserRule getConsultaRule() {
		return getConsultaAccess().getRule();
	}
	
	//Eliminacion:
	//    'Eliminar' sustantivo=TipoProceso
	//    (tipoMaquina=TipoMaquina potencia=INT | tipoMaterial=TipoMaterial grosor=INT)
	//;
	public EliminacionElements getEliminacionAccess() {
		return pEliminacion;
	}
	
	public ParserRule getEliminacionRule() {
		return getEliminacionAccess().getRule();
	}
	
	//Maquina:
	//    'Maquina'
	//;
	public MaquinaElements getMaquinaAccess() {
		return pMaquina;
	}
	
	public ParserRule getMaquinaRule() {
		return getMaquinaAccess().getRule();
	}
	
	//Material:
	//    'Material'
	//;
	public MaterialElements getMaterialAccess() {
		return pMaterial;
	}
	
	public ParserRule getMaterialRule() {
		return getMaterialAccess().getRule();
	}
	
	//TipoMaquina:
	//    'CO2' | 'Fibra' | 'Vidrio';
	public TipoMaquinaElements getTipoMaquinaAccess() {
		return pTipoMaquina;
	}
	
	public ParserRule getTipoMaquinaRule() {
		return getTipoMaquinaAccess().getRule();
	}
	
	//Verbo:
	//    'cortar' | 'grabar';
	public VerboElements getVerboAccess() {
		return pVerbo;
	}
	
	public ParserRule getVerboRule() {
		return getVerboAccess().getRule();
	}
	
	//TipoMaterial:
	//    'Madera' | 'MDF' | 'Metal'
	//;
	public TipoMaterialElements getTipoMaterialAccess() {
		return pTipoMaterial;
	}
	
	public ParserRule getTipoMaterialRule() {
		return getTipoMaterialAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
