/*
 * generated by Xtext 2.34.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getProcesosProcesoParserRuleCall_0());
			}
			lv_procesos_0_0=ruleProceso
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"procesos",
					lv_procesos_0_0,
					"org.xtext.example.mydsl.MyDsl.Proceso");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleProceso
entryRuleProceso returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcesoRule()); }
	iv_ruleProceso=ruleProceso
	{ $current=$iv_ruleProceso.current; }
	EOF;

// Rule Proceso
ruleProceso returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Procesar'
		{
			newLeafNode(otherlv_0, grammarAccess.getProcesoAccess().getProcesarKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcesoAccess().getTipoTipoProcesoParserRuleCall_1_0());
				}
				lv_tipo_1_0=ruleTipoProceso
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcesoRule());
					}
					set(
						$current,
						"tipo",
						lv_tipo_1_0,
						"org.xtext.example.mydsl.MyDsl.TipoProceso");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getProcesoAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getProcesoAccess().getCreacionCreacionParserRuleCall_3_0_0());
					}
					lv_creacion_3_0=ruleCreacion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcesoRule());
						}
						set(
							$current,
							"creacion",
							lv_creacion_3_0,
							"org.xtext.example.mydsl.MyDsl.Creacion");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getProcesoAccess().getConsultaConsultaParserRuleCall_3_1_0());
					}
					lv_consulta_4_0=ruleConsulta
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcesoRule());
						}
						set(
							$current,
							"consulta",
							lv_consulta_4_0,
							"org.xtext.example.mydsl.MyDsl.Consulta");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getProcesoAccess().getEliminacionEliminacionParserRuleCall_3_2_0());
					}
					lv_eliminacion_5_0=ruleEliminacion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcesoRule());
						}
						set(
							$current,
							"eliminacion",
							lv_eliminacion_5_0,
							"org.xtext.example.mydsl.MyDsl.Eliminacion");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getProcesoAccess().getRightCurlyBracketKeyword_4());
		}
		otherlv_7='Concluir'
		{
			newLeafNode(otherlv_7, grammarAccess.getProcesoAccess().getConcluirKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcesoAccess().getTipoTipoProcesoParserRuleCall_6_0());
				}
				lv_tipo_8_0=ruleTipoProceso
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcesoRule());
					}
					set(
						$current,
						"tipo",
						lv_tipo_8_0,
						"org.xtext.example.mydsl.MyDsl.TipoProceso");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTipoProceso
entryRuleTipoProceso returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTipoProcesoRule()); }
	iv_ruleTipoProceso=ruleTipoProceso
	{ $current=$iv_ruleTipoProceso.current.getText(); }
	EOF;

// Rule TipoProceso
ruleTipoProceso returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTipoProcesoAccess().getMaquinaParserRuleCall_0());
		}
		this_Maquina_0=ruleMaquina
		{
			$current.merge(this_Maquina_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTipoProcesoAccess().getMaterialParserRuleCall_1());
		}
		this_Material_1=ruleMaterial
		{
			$current.merge(this_Material_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCreacion
entryRuleCreacion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreacionRule()); }
	iv_ruleCreacion=ruleCreacion
	{ $current=$iv_ruleCreacion.current; }
	EOF;

// Rule Creacion
ruleCreacion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Crear'
		{
			newLeafNode(otherlv_0, grammarAccess.getCreacionAccess().getCrearKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCreacionAccess().getSustantivoTipoProcesoParserRuleCall_1_0());
				}
				lv_sustantivo_1_0=ruleTipoProceso
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreacionRule());
					}
					set(
						$current,
						"sustantivo",
						lv_sustantivo_1_0,
						"org.xtext.example.mydsl.MyDsl.TipoProceso");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getCreacionAccess().getTipoMaquinaTipoMaquinaParserRuleCall_2_0_0_0());
						}
						lv_tipoMaquina_2_0=ruleTipoMaquina
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCreacionRule());
							}
							set(
								$current,
								"tipoMaquina",
								lv_tipoMaquina_2_0,
								"org.xtext.example.mydsl.MyDsl.TipoMaquina");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						lv_potencia_3_0=RULE_INT
						{
							newLeafNode(lv_potencia_3_0, grammarAccess.getCreacionAccess().getPotenciaINTTerminalRuleCall_2_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCreacionRule());
							}
							setWithLastConsumed(
								$current,
								"potencia",
								lv_potencia_3_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getCreacionAccess().getTipoMaterialTipoMaterialParserRuleCall_2_1_0_0());
						}
						lv_tipoMaterial_4_0=ruleTipoMaterial
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCreacionRule());
							}
							set(
								$current,
								"tipoMaterial",
								lv_tipoMaterial_4_0,
								"org.xtext.example.mydsl.MyDsl.TipoMaterial");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						lv_grosor_5_0=RULE_INT
						{
							newLeafNode(lv_grosor_5_0, grammarAccess.getCreacionAccess().getGrosorINTTerminalRuleCall_2_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCreacionRule());
							}
							setWithLastConsumed(
								$current,
								"grosor",
								lv_grosor_5_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleConsulta
entryRuleConsulta returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConsultaRule()); }
	iv_ruleConsulta=ruleConsulta
	{ $current=$iv_ruleConsulta.current; }
	EOF;

// Rule Consulta
ruleConsulta returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Consultar'
		{
			newLeafNode(otherlv_0, grammarAccess.getConsultaAccess().getConsultarKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConsultaAccess().getSustantivoTipoProcesoParserRuleCall_1_0());
				}
				lv_sustantivo_1_0=ruleTipoProceso
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConsultaRule());
					}
					set(
						$current,
						"sustantivo",
						lv_sustantivo_1_0,
						"org.xtext.example.mydsl.MyDsl.TipoProceso");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getConsultaAccess().getTipoMaquinaTipoMaquinaParserRuleCall_2_0_0_0());
						}
						lv_tipoMaquina_2_0=ruleTipoMaquina
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConsultaRule());
							}
							set(
								$current,
								"tipoMaquina",
								lv_tipoMaquina_2_0,
								"org.xtext.example.mydsl.MyDsl.TipoMaquina");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						lv_potencia_3_0=RULE_INT
						{
							newLeafNode(lv_potencia_3_0, grammarAccess.getConsultaAccess().getPotenciaINTTerminalRuleCall_2_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConsultaRule());
							}
							setWithLastConsumed(
								$current,
								"potencia",
								lv_potencia_3_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getConsultaAccess().getTipoMaterialTipoMaterialParserRuleCall_2_1_0_0());
						}
						lv_tipoMaterial_4_0=ruleTipoMaterial
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConsultaRule());
							}
							set(
								$current,
								"tipoMaterial",
								lv_tipoMaterial_4_0,
								"org.xtext.example.mydsl.MyDsl.TipoMaterial");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						lv_grosor_5_0=RULE_INT
						{
							newLeafNode(lv_grosor_5_0, grammarAccess.getConsultaAccess().getGrosorINTTerminalRuleCall_2_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConsultaRule());
							}
							setWithLastConsumed(
								$current,
								"grosor",
								lv_grosor_5_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConsultaAccess().getVerboVerboParserRuleCall_3_0());
				}
				lv_verbo_6_0=ruleVerbo
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConsultaRule());
					}
					set(
						$current,
						"verbo",
						lv_verbo_6_0,
						"org.xtext.example.mydsl.MyDsl.Verbo");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEliminacion
entryRuleEliminacion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEliminacionRule()); }
	iv_ruleEliminacion=ruleEliminacion
	{ $current=$iv_ruleEliminacion.current; }
	EOF;

// Rule Eliminacion
ruleEliminacion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Eliminar'
		{
			newLeafNode(otherlv_0, grammarAccess.getEliminacionAccess().getEliminarKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEliminacionAccess().getSustantivoTipoProcesoParserRuleCall_1_0());
				}
				lv_sustantivo_1_0=ruleTipoProceso
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEliminacionRule());
					}
					set(
						$current,
						"sustantivo",
						lv_sustantivo_1_0,
						"org.xtext.example.mydsl.MyDsl.TipoProceso");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getEliminacionAccess().getTipoMaquinaTipoMaquinaParserRuleCall_2_0_0_0());
						}
						lv_tipoMaquina_2_0=ruleTipoMaquina
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEliminacionRule());
							}
							set(
								$current,
								"tipoMaquina",
								lv_tipoMaquina_2_0,
								"org.xtext.example.mydsl.MyDsl.TipoMaquina");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						lv_potencia_3_0=RULE_INT
						{
							newLeafNode(lv_potencia_3_0, grammarAccess.getEliminacionAccess().getPotenciaINTTerminalRuleCall_2_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEliminacionRule());
							}
							setWithLastConsumed(
								$current,
								"potencia",
								lv_potencia_3_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getEliminacionAccess().getTipoMaterialTipoMaterialParserRuleCall_2_1_0_0());
						}
						lv_tipoMaterial_4_0=ruleTipoMaterial
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEliminacionRule());
							}
							set(
								$current,
								"tipoMaterial",
								lv_tipoMaterial_4_0,
								"org.xtext.example.mydsl.MyDsl.TipoMaterial");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						lv_grosor_5_0=RULE_INT
						{
							newLeafNode(lv_grosor_5_0, grammarAccess.getEliminacionAccess().getGrosorINTTerminalRuleCall_2_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEliminacionRule());
							}
							setWithLastConsumed(
								$current,
								"grosor",
								lv_grosor_5_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleMaquina
entryRuleMaquina returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMaquinaRule()); }
	iv_ruleMaquina=ruleMaquina
	{ $current=$iv_ruleMaquina.current.getText(); }
	EOF;

// Rule Maquina
ruleMaquina returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='Maquina'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getMaquinaAccess().getMaquinaKeyword());
	}
;

// Entry rule entryRuleMaterial
entryRuleMaterial returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMaterialRule()); }
	iv_ruleMaterial=ruleMaterial
	{ $current=$iv_ruleMaterial.current.getText(); }
	EOF;

// Rule Material
ruleMaterial returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='Material'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getMaterialAccess().getMaterialKeyword());
	}
;

// Entry rule entryRuleTipoMaquina
entryRuleTipoMaquina returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTipoMaquinaRule()); }
	iv_ruleTipoMaquina=ruleTipoMaquina
	{ $current=$iv_ruleTipoMaquina.current.getText(); }
	EOF;

// Rule TipoMaquina
ruleTipoMaquina returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='CO2'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTipoMaquinaAccess().getCO2Keyword_0());
		}
		    |
		kw='Fibra'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTipoMaquinaAccess().getFibraKeyword_1());
		}
		    |
		kw='Vidrio'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTipoMaquinaAccess().getVidrioKeyword_2());
		}
	)
;

// Entry rule entryRuleVerbo
entryRuleVerbo returns [String current=null]:
	{ newCompositeNode(grammarAccess.getVerboRule()); }
	iv_ruleVerbo=ruleVerbo
	{ $current=$iv_ruleVerbo.current.getText(); }
	EOF;

// Rule Verbo
ruleVerbo returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='cortar'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVerboAccess().getCortarKeyword_0());
		}
		    |
		kw='grabar'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVerboAccess().getGrabarKeyword_1());
		}
	)
;

// Entry rule entryRuleTipoMaterial
entryRuleTipoMaterial returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTipoMaterialRule()); }
	iv_ruleTipoMaterial=ruleTipoMaterial
	{ $current=$iv_ruleTipoMaterial.current.getText(); }
	EOF;

// Rule TipoMaterial
ruleTipoMaterial returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='Madera'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTipoMaterialAccess().getMaderaKeyword_0());
		}
		    |
		kw='MDF'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTipoMaterialAccess().getMDFKeyword_1());
		}
		    |
		kw='Metal'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTipoMaterialAccess().getMetalKeyword_2());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
