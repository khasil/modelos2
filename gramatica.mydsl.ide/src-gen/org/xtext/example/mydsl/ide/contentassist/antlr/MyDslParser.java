/*
 * generated by Xtext 2.34.0
 */
package org.xtext.example.mydsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.mydsl.ide.contentassist.antlr.internal.InternalMyDslParser;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MyDslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MyDslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getProcesoAccess().getAlternatives_3(), "rule__Proceso__Alternatives_3");
			builder.put(grammarAccess.getTipoProcesoAccess().getAlternatives(), "rule__TipoProceso__Alternatives");
			builder.put(grammarAccess.getCreacionAccess().getAlternatives_2(), "rule__Creacion__Alternatives_2");
			builder.put(grammarAccess.getConsultaAccess().getAlternatives_2(), "rule__Consulta__Alternatives_2");
			builder.put(grammarAccess.getEliminacionAccess().getAlternatives_2(), "rule__Eliminacion__Alternatives_2");
			builder.put(grammarAccess.getTipoMaquinaAccess().getAlternatives(), "rule__TipoMaquina__Alternatives");
			builder.put(grammarAccess.getVerboAccess().getAlternatives(), "rule__Verbo__Alternatives");
			builder.put(grammarAccess.getTipoMaterialAccess().getAlternatives(), "rule__TipoMaterial__Alternatives");
			builder.put(grammarAccess.getProcesoAccess().getGroup(), "rule__Proceso__Group__0");
			builder.put(grammarAccess.getCreacionAccess().getGroup(), "rule__Creacion__Group__0");
			builder.put(grammarAccess.getCreacionAccess().getGroup_2_0(), "rule__Creacion__Group_2_0__0");
			builder.put(grammarAccess.getCreacionAccess().getGroup_2_1(), "rule__Creacion__Group_2_1__0");
			builder.put(grammarAccess.getConsultaAccess().getGroup(), "rule__Consulta__Group__0");
			builder.put(grammarAccess.getConsultaAccess().getGroup_2_0(), "rule__Consulta__Group_2_0__0");
			builder.put(grammarAccess.getConsultaAccess().getGroup_2_1(), "rule__Consulta__Group_2_1__0");
			builder.put(grammarAccess.getEliminacionAccess().getGroup(), "rule__Eliminacion__Group__0");
			builder.put(grammarAccess.getEliminacionAccess().getGroup_2_0(), "rule__Eliminacion__Group_2_0__0");
			builder.put(grammarAccess.getEliminacionAccess().getGroup_2_1(), "rule__Eliminacion__Group_2_1__0");
			builder.put(grammarAccess.getModelAccess().getProcesosAssignment(), "rule__Model__ProcesosAssignment");
			builder.put(grammarAccess.getProcesoAccess().getTipoAssignment_1(), "rule__Proceso__TipoAssignment_1");
			builder.put(grammarAccess.getProcesoAccess().getCreacionAssignment_3_0(), "rule__Proceso__CreacionAssignment_3_0");
			builder.put(grammarAccess.getProcesoAccess().getConsultaAssignment_3_1(), "rule__Proceso__ConsultaAssignment_3_1");
			builder.put(grammarAccess.getProcesoAccess().getEliminacionAssignment_3_2(), "rule__Proceso__EliminacionAssignment_3_2");
			builder.put(grammarAccess.getProcesoAccess().getTipoAssignment_6(), "rule__Proceso__TipoAssignment_6");
			builder.put(grammarAccess.getCreacionAccess().getSustantivoAssignment_1(), "rule__Creacion__SustantivoAssignment_1");
			builder.put(grammarAccess.getCreacionAccess().getTipoMaquinaAssignment_2_0_0(), "rule__Creacion__TipoMaquinaAssignment_2_0_0");
			builder.put(grammarAccess.getCreacionAccess().getPotenciaAssignment_2_0_1(), "rule__Creacion__PotenciaAssignment_2_0_1");
			builder.put(grammarAccess.getCreacionAccess().getTipoMaterialAssignment_2_1_0(), "rule__Creacion__TipoMaterialAssignment_2_1_0");
			builder.put(grammarAccess.getCreacionAccess().getGrosorAssignment_2_1_1(), "rule__Creacion__GrosorAssignment_2_1_1");
			builder.put(grammarAccess.getConsultaAccess().getSustantivoAssignment_1(), "rule__Consulta__SustantivoAssignment_1");
			builder.put(grammarAccess.getConsultaAccess().getTipoMaquinaAssignment_2_0_0(), "rule__Consulta__TipoMaquinaAssignment_2_0_0");
			builder.put(grammarAccess.getConsultaAccess().getPotenciaAssignment_2_0_1(), "rule__Consulta__PotenciaAssignment_2_0_1");
			builder.put(grammarAccess.getConsultaAccess().getTipoMaterialAssignment_2_1_0(), "rule__Consulta__TipoMaterialAssignment_2_1_0");
			builder.put(grammarAccess.getConsultaAccess().getGrosorAssignment_2_1_1(), "rule__Consulta__GrosorAssignment_2_1_1");
			builder.put(grammarAccess.getConsultaAccess().getVerboAssignment_3(), "rule__Consulta__VerboAssignment_3");
			builder.put(grammarAccess.getEliminacionAccess().getSustantivoAssignment_1(), "rule__Eliminacion__SustantivoAssignment_1");
			builder.put(grammarAccess.getEliminacionAccess().getTipoMaquinaAssignment_2_0_0(), "rule__Eliminacion__TipoMaquinaAssignment_2_0_0");
			builder.put(grammarAccess.getEliminacionAccess().getPotenciaAssignment_2_0_1(), "rule__Eliminacion__PotenciaAssignment_2_0_1");
			builder.put(grammarAccess.getEliminacionAccess().getTipoMaterialAssignment_2_1_0(), "rule__Eliminacion__TipoMaterialAssignment_2_1_0");
			builder.put(grammarAccess.getEliminacionAccess().getGrosorAssignment_2_1_1(), "rule__Eliminacion__GrosorAssignment_2_1_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MyDslGrammarAccess grammarAccess;

	@Override
	protected InternalMyDslParser createParser() {
		InternalMyDslParser result = new InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
